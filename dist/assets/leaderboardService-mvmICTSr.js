import{q as z,h as f,b as _,n as v,i as P,o as L}from"./firebaseConfig-DFE2fxb7.js";const b={AVERAGE_SCORE:"average_score",TOTAL_SCORE:"total_score",QUIZ_COUNT:"quiz_count",STREAK:"streak",RECENT_PERFORMANCE:"recent_performance"},h={ALL_TIME:"all_time",THIS_MONTH:"this_month",THIS_WEEK:"this_week",TODAY:"today"},T=a=>{if(!a.length)return{totalQuizzes:0,totalScore:0,averageScore:0,averagePercentage:0,highestScore:0,lowestScore:0,recentStreak:0,totalPoints:0};const i=a.map(t=>t.score||0),s=a.map(t=>t.percentage||0),n=a.length,c=i.reduce((t,e)=>t+e,0),d=c/n,u=s.reduce((t,e)=>t+e,0)/n;let l=0;const g=a.sort((t,e)=>(e.submittedAt?.toDate?.()||new Date)-(t.submittedAt?.toDate?.()||new Date));for(const t of g)if((t.percentage||0)>=70)l++;else break;const r=a.reduce((t,e)=>{const o=e.score||0,E=(e.percentage||0)>=90?5:(e.percentage||0)>=80?3:(e.percentage||0)>=70?1:0;return t+o+E},0);return{totalQuizzes:n,totalScore:c,averageScore:Math.round(d*100)/100,averagePercentage:Math.round(u*100)/100,highestScore:Math.max(...i),lowestScore:Math.min(...i),recentStreak:l,totalPoints:r}},w=(a,i)=>{const s=new Date;let n;switch(i){case h.TODAY:n=new Date(s.getFullYear(),s.getMonth(),s.getDate());break;case h.THIS_WEEK:const c=s.getDay();n=new Date(s.getTime()-c*24*60*60*1e3),n.setHours(0,0,0,0);break;case h.THIS_MONTH:n=new Date(s.getFullYear(),s.getMonth(),1);break;default:return a}return a.filter(c=>(c.submittedAt?.toDate?.()||new Date(c.submittedAt))>=n)},k=async()=>{try{console.log("🏆 Fetching all submissions for leaderboard...");const a=z(f(_,"quizzes")),i=await P(a),s=[],n=[];return i.docs.forEach(c=>{const d=z(f(_,"quizzes",c.id,"submissions"),L("submittedAt","desc"));n.push(P(d).then(u=>{u.docs.forEach(l=>{s.push({id:l.id,quizId:c.id,quizTitle:c.data().title,...l.data()})})}))}),await Promise.all(n),console.log(`📊 Found ${s.length} total submissions`),s}catch(a){return console.error("❌ Error fetching submissions:",a),[]}},D=async(a,i=b.AVERAGE_SCORE,s=h.ALL_TIME,n=50)=>{try{console.log(`🏆 Generating ${a} department leaderboard...`);const d=(await k()).filter(e=>e.department===a),u=w(d,s),l={};u.forEach(e=>{const o=e.userId;l[o]||(l[o]={userId:o,regNumber:e.regNumber,fullName:e.fullName,department:e.department,email:e.email,submissions:[]}),l[o].submissions.push(e)});const g=Object.values(l).map(e=>{const o=T(e.submissions);return{...e,...o,rank:0}});let r;switch(i){case b.TOTAL_SCORE:r=g.sort((e,o)=>o.totalScore-e.totalScore);break;case b.QUIZ_COUNT:r=g.sort((e,o)=>o.totalQuizzes-e.totalQuizzes);break;case b.STREAK:r=g.sort((e,o)=>o.recentStreak-e.recentStreak);break;case b.RECENT_PERFORMANCE:r=g.sort((e,o)=>{const E=e.submissions.slice(0,5),p=o.submissions.slice(0,5),S=E.reduce((A,R)=>A+(R.percentage||0),0)/E.length;return p.reduce((A,R)=>A+(R.percentage||0),0)/p.length-S});break;default:r=g.sort((e,o)=>o.averagePercentage!==e.averagePercentage?o.averagePercentage-e.averagePercentage:o.totalQuizzes-e.totalQuizzes)}r.forEach((e,o)=>{e.rank=o+1});const t=r.slice(0,n);return console.log(`🏅 ${a} leaderboard generated: ${t.length} users`),{department:a,rankingType:i,timePeriod:s,users:t,totalParticipants:g.length,generatedAt:new Date}}catch(c){return console.error(`❌ Error generating ${a} leaderboard:`,c),{department:a,rankingType:i,timePeriod:s,users:[],totalParticipants:0,generatedAt:new Date,error:c.message}}},O=async(a=b.AVERAGE_SCORE,i=h.ALL_TIME,s=100)=>{try{console.log("🌍 Generating global leaderboard...");const n=await k(),c=w(n,i),d={};c.forEach(r=>{const t=r.userId;d[t]||(d[t]={userId:t,regNumber:r.regNumber,fullName:r.fullName,department:r.department,email:r.email,submissions:[]}),d[t].submissions.push(r)});const u=Object.values(d).map(r=>{const t=T(r.submissions);return{...r,...t,rank:0}});let l;switch(a){case b.TOTAL_SCORE:l=u.sort((r,t)=>t.totalScore-r.totalScore);break;case b.QUIZ_COUNT:l=u.sort((r,t)=>t.totalQuizzes-r.totalQuizzes);break;case b.STREAK:l=u.sort((r,t)=>t.recentStreak-r.recentStreak);break;case b.RECENT_PERFORMANCE:l=u.sort((r,t)=>{const e=r.submissions.slice(0,5),o=t.submissions.slice(0,5),E=e.reduce((S,m)=>S+(m.percentage||0),0)/e.length;return o.reduce((S,m)=>S+(m.percentage||0),0)/o.length-E});break;default:l=u.sort((r,t)=>t.averagePercentage!==r.averagePercentage?t.averagePercentage-r.averagePercentage:t.totalQuizzes-r.totalQuizzes)}l.forEach((r,t)=>{r.rank=t+1});const g=l.slice(0,s);return console.log(`🌍 Global leaderboard generated: ${g.length} users`),{scope:"global",rankingType:a,timePeriod:i,users:g,totalParticipants:u.length,generatedAt:new Date}}catch(n){return console.error("❌ Error generating global leaderboard:",n),{scope:"global",rankingType:a,timePeriod:i,users:[],totalParticipants:0,generatedAt:new Date,error:n.message}}},N=async(a,i,s=b.AVERAGE_SCORE,n=h.ALL_TIME)=>{try{const c=await D(i,s,n,1e3),d=await O(s,n,1e3),u=c.users.find(g=>g.userId===a),l=d.users.find(g=>g.userId===a);return{department:{rank:u?.rank||null,totalParticipants:c.totalParticipants,stats:u||null},global:{rank:l?.rank||null,totalParticipants:d.totalParticipants,stats:l||null}}}catch(c){return console.error("❌ Error getting user position:",c),null}},C=(a,i=null)=>{try{const s=z(f(_,"quizzes"));return v(s,async c=>{console.log("🔄 Leaderboard data updated, regenerating...");const d=i?await D(i):null,u=await O();a({department:d,global:u,lastUpdated:new Date})})}catch(s){return console.error("❌ Error setting up leaderboard listener:",s),()=>{}}};export{b as R,h as T,O as a,N as b,T as c,D as g,C as s};
